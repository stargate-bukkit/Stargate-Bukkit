# Headers
headerVersion=Version: %version%
headerDocumentation=Documentation: %link%
headerReports=Bug Reports: %link%
headerPreferences=General Preferences
headerBehaviour=Gate Behavior
headerEconomy=Economy
headerAesthetic=Aesthetic Tweaks
headerTechnical=Technical
subheaderCompat=Compatibility
subheaderLogging=Logging
subheaderDebug=Debug
descriptionCompatibility=These settings are provided to improve SG interactions with other plugins.
descriptionLogging=How much information should stargate send to console?     
descriptionDebug=These settings are provided to help developers diagnose issues with this plugin. 
tagNote=NOTE

# General Preferences
languageL1=What language will stargate use when communicating with your users?
languageL2=Supported values: %values%
languageL4=If SG isn't yet available in your language, please consider becoming a translator:
bungee.UsingBungeeL1=Are you connected to a bungee-compatible proxy?
bungee.usingBungeeL2=Set this to true if you intend on building gates with the 'u' flag.
bungee.useRemoteDatabaseL1=By default, Stargate uses a local SQLite database to store its data.
bungee.useRemoteDatabaseL3=If you are running a large server, we recommend using a remote database.
bungee.useRemoteDatabaseL4=Note that such a database is required if you intend on building gates with the 'i' flag.
bungee.remoteDatabaseSettings.L1=Only applicable if useRemoteDatabase is true.
bungee.remoteDatabaseSettings.driverL1=What driver should stargate use to connect to your database?
bungee.remoteDatabaseSettings.driverL2=Currently, these are supported: %values%
bungee.remoteDatabaseSettings.addressL1=Where can stargate find your database?
bungee.remoteDatabaseSettings.useSSLL1=Should stargate use SSL when connecting to your database?
bungee.remoteDatabaseSettings.databaseL1=The name of the database Stargate will use to store its data. Must already exist.
bungee.remoteDatabaseSettings.databaseL2=If you are using Bungee, this should be shared across all Stargate instances.
bungee.remoteDatabaseSettings.usernameL1=Credentials to use for the connection:
bungee.remoteDatabaseSettings.advancedDatabaseConfigurationL1=Should we generate a database config file ('hikari.properties') in your stargate folder?
bungee.remoteDatabaseSettings.advancedDatabaseConfigurationL2=Doing so will ignore all the remoteDatabaseSettings above in favor of the new file!
bungee.remoteDatabaseSettings.advancedDatabaseConfigurationL4=This allows you to use advanced RDMS features such as pool limits, cache sizes, etc.
bungee.remoteDatabaseSettings.advancedDatabaseConfigurationL5=A list of available settings can be found at this link: %link%.
defaultGateNetworkL1=What network will be used when none has been specified? (Max length 12 characters)
defaultGateNetworkL3=Note that this primarily applies to users with the stargate.create.network node.
defaultGateNetworkL4=Generally, that node is given to staff (we recommend stargate.create.personal for users).
defaultTerminalNetworkL1=What network will Stargate reserve for terminal ('T') portals?
defaultTerminalNetworkL3=Generally, this feature is used to make a group of portals in spawn known as a 'Terminal'.
defaultTerminalNetworkL4=Using this network, players can pay to connect their towns/bases/shops/etc. to the terminal.
defaultTerminalNetworkL6=Not yet implemented!
defaultTerminalNetworkL7=Terminal support is slated for %version%!

# Gate Behaviour
networkLimitL1=What is the maximum number of gates a single network may contain? (-1 for unlimited)
handleVehiclesL1=Will vehicles and their passengers be able to travel through Stargate portals?
handleVehiclesL2=minecarts, boats, & saddled mobs = vehicles | players & mobs = passengers
handleLeashedCreaturesL1=If a player teleports while attached with a lead to an entity, should SG also teleport the entity?
CheckPortalValidityL1=Will the server re-verify all existing portals on startup?
CheckPortalValidityL3=This checks that the expected gates are both present and using a valid layout.
CheckPortalValidityL4=Designed to catch .gate file modifications, world changes, and terrain regeneration.
destroyOnExplosionL1=Can StarGates be broken via an explosion?
destroyOnExplosionL2=[tnt, creepers, etc.]
gateExitSpeedMultiplierL1=At what speed should players be sent out of portals?
gateExitSpeedMultiplierL2=When exiting a gate, players retain their original movement velocity, multiplied by this value.

# Economy
useEconomyL1=Will Stargate interact with your server's economy?
useEconomyL3=For these features, Stargate depends on the Vault plugin.
taxAccountL1=Does your server have a tax account (closed economy)?
taxAccountL2=If so, please provide the name of your tax account (collected money will be sent to it).
taxAccountL3=If not, leave this section blank (collected money will be deleted).
TaxAccountL5=Note that usageCost money is excluded from this system when gateOwnerRevenue is true.
creationCostL1=How much will be deducted from players' accounts when creating a new gate?
destructionCostL1=How much will be deducted from players' accounts when destroying an existing gate?
usageCostL1=How much will be deducted from players' accounts when using a stargate to teleport?
usageCostL2=This does not apply to stargates with the 'f' flag.
gateOwnerRevenueL1=Will fees collected for ‘usecost’ be paid to whomever created (owns) the applicable stargate?
gateOnwerRevenueL2=If false, collected funds will be deleted (or sent to the taxAccount).
chargeFreeDestinationL1=Will ‘creationCost’ still be charged if the new gate's destination is a gate with the 'f' flag?
chargeFreeDestinationL2=Note that this only applies to fixed gates.

# Aesthetic Tweaks
signFormattingL1=These settings are used to customize the colors and styles used by SG when formatting signs.
signFormattingL2=For more advanced styling options, please use https://sgrewritten.org/extraColours
signFormatting.color.L1=The default text color on all stargate signs (brightness shifts based on sign material)
signFormatting.color.L2=A list of valid colors can be found at https://sgrewritten.org/colourTypes
signFormatting.pointerBehaviourL1=SG highlights players' selected destinations with a pointer symbol as users scroll.
signFormatting.pointerBehaviourL2=How should SG style its pointer symbol? (https://sgrewritten.org/pointerStyles)
signFormatting.pointerBehaviourL3=Options:
signFormatting.pointerBehaviourL4=1: No styling (the pointer will be the same default color used by the sign's text).
signFormatting.pointerBehaviourL5=2: Destination type (the pointer will color-code based on the selected destination)
signFormatting.pointerBehaviourL6=3: Accented (pointer brightness will shift to contrast with the sign's default color)
disableCustomColoredNamesL1=By default, SG allows users to specify colored names for their gates via external plugins.
disableCustomColoredNamesL2=Such names override the colors specified for signStyle (above).
disableCustomColoredNamesL4=Should SG disable this behavior by forcing the game to display exactly what was written?
rememberLastDestinationL1=Will the destination a networked portal last connected to be listed first in its scroll menu?

#Technical
portalFileL1=When useRemoteDatabase is false, Stargate stores all of its portal data in a flatfile.
portalFileL2=What should this flatfile be named?
gateFolderL1=Currently, on startup, a folder is checked for gate layouts stored as ‘.gate’ files.
gateFolderL2=Where is that folder?
gateFolderL4=This option is provided as a patch to allow data to be imported from some older forks.
customRemoteDatabasePrefixL1=By default, SG will preface its remote database tables with `SG_`.
customRemoteDatabasePrefixL2=If this conflicts with another plugin, you can change that prefix here.
loggingLevelL1=Possible Values:
loggingLevelL2=Not recommended
loggingLevelL3=𝐇𝐢𝐝𝐞 𝐞𝐯𝐞𝐫𝐲𝐭𝐡𝐢𝐧𝐠. 𝑂𝑛𝑙𝑦 𝑝𝑟𝑖𝑛𝑡 𝑡𝑜 𝑐𝑜𝑛𝑠𝑜𝑙𝑒 𝑖𝑓 𝑝𝑙𝑢𝑔𝑖𝑛 𝑓𝑎𝑡𝑎𝑙𝑙𝑦 𝑐𝑟𝑎𝑠ℎ𝑒𝑠
loggingLevelL4=Recommended for large and well-tested production implementations
loggingLevelL5=𝐇𝐢𝐝𝐞 𝐧𝐨𝐫𝐦𝐚𝐥 𝐛𝐞𝐡𝐚𝐯𝐢𝐨𝐮𝐫. 𝑂𝑛𝑙𝑦 𝑝𝑟𝑖𝑛𝑡 𝑝𝑜𝑡𝑒𝑛𝑡𝑖𝑎𝑙 𝑖𝑠𝑠𝑢𝑒𝑠.
loggingLevelL6=Recommended for most production implementations
loggingLevelL7=𝐏𝐫𝐢𝐧𝐭 𝐧𝐨𝐫𝐦𝐚𝐥 𝐛𝐞𝐡𝐚𝐯𝐢𝐨𝐮𝐫. 𝑃𝑟𝑖𝑛𝑡𝑠 𝑝𝑜𝑟𝑡𝑎𝑙 𝑒𝑣𝑒𝑛𝑡𝑠 (𝑢𝑠𝑎𝑔𝑒, 𝑐𝑟𝑒𝑎𝑡𝑖𝑜𝑛, 𝑑𝑒𝑠𝑡𝑟𝑢𝑐𝑡𝑖𝑜𝑛, 𝑒𝑡𝑐.)
loggingLevelL8=Useful for configuring preproduction instances
loggingLevelL9=𝐏𝐫𝐢𝐧𝐭 𝐩𝐞𝐫𝐦𝐢𝐬𝐬𝐢𝐨𝐧 𝐜𝐡𝐞𝐜𝐤𝐬. 𝑃𝑟𝑖𝑛𝑡𝑠 𝑐ℎ𝑒𝑐𝑘𝑠 𝑚𝑎𝑑𝑒 𝑡𝑜 𝑑𝑒𝑡𝑒𝑟𝑚𝑖𝑛𝑒 𝑖𝑓 𝑝𝑙𝑎𝑦𝑒𝑟𝑠 𝑐𝑎𝑛 𝑝𝑒𝑟𝑓𝑜𝑟𝑚 𝑎𝑛 𝑎𝑐𝑡𝑖𝑜𝑛.
loggingLevelL10=Recommended for basic troubleshooting
loggingLevelL11=𝐏𝐫𝐢𝐧𝐭 𝐥𝐢𝐦𝐢𝐭𝐞𝐝 𝐝𝐞𝐛𝐮𝐠 𝐢𝐧𝐟𝐨. 𝑃𝑟𝑖𝑛𝑡𝑠 𝑔𝑒𝑛𝑒𝑟𝑎𝑙 𝑝𝑙𝑢𝑔𝑖𝑛 𝑒𝑣𝑒𝑛𝑡𝑠 (𝑙𝑜𝑎𝑑𝑖𝑛𝑔, 𝑑𝑖𝑠𝑎𝑏𝑙𝑖𝑛𝑔, 𝑐𝑜𝑛𝑛𝑒𝑐𝑡𝑖𝑜𝑛𝑠, 𝑒𝑡𝑐.).
loggingLevelL12=Recommended for some addon developers.
loggingLevelL13=𝐏𝐫𝐢𝐧𝐭 𝐦𝐨𝐬𝐭 𝐝𝐞𝐛𝐮𝐠 𝐢𝐧𝐟𝐨. 𝑃𝑟𝑖𝑛𝑡𝑠 𝑚𝑒𝑠𝑠𝑎𝑔𝑒𝑠 𝑑𝑒𝑡𝑎𝑖𝑙𝑖𝑛𝑔 𝑡ℎ𝑒 𝑝𝑙𝑢𝑔𝑖𝑛'𝑠 𝑙𝑜𝑔𝑖𝑐 𝑎𝑛𝑑 𝑏𝑒ℎ𝑎𝑣𝑖𝑜𝑢𝑟.
LoggingLevelL14=Only used by Stargate's core development team
LoggingLevelL15=𝐏𝐫𝐢𝐧𝐭 𝐞𝐯𝐞𝐫𝐲𝐭𝐡𝐢𝐧𝐠. 𝑃𝑟𝑖𝑛𝑡𝑠 𝑙𝑖𝑡𝑒𝑟𝑎𝑙𝑙𝑦 𝑒𝑣𝑒𝑟𝑦𝑡ℎ𝑖𝑛𝑔, 𝑖𝑛𝑐𝑙𝑢𝑑𝑖𝑛𝑔 𝑛𝑢𝑚𝑒𝑟𝑜𝑢𝑠 𝑠𝑡𝑎𝑐𝑘 𝑡𝑟𝑎𝑐𝑒𝑠.
configVersionL1=An internal value used by the plugin to determine how old your config is.
configVersionL2=Please do not change this.


#Admin
translatedBy=Pheotis
